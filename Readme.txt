解決方案條列:

00.Server/Client

01.EXE
	優點: 鬆耦合(各自獨立)；不用考慮X32/X64整合性；不用重新開發
	缺點: 交換資料方法速度慢；維護多種程式語言；各元件版本獨立控管
	EX:NCCC
	
02.原生(C/C++/...)DLL 
	優點: 鬆耦合(各自獨立)；交換資料方法速度快；不用重新開發
	缺點: 需要考慮X32/X64整合性；維護多種程式語言；各元件版本獨立控管
	EX: notepad++；PHP extensions
	
03.相同專案，不同namespace和使用資料夾區分(C# Code)
	優點: 交換資料方法速度快;只需維護一種開發工具；減少重複程式碼；單一版號
	缺點: 緊耦合(相依性高)；舊專案需要重新開發；前期開發在變數相關命名必須分得很細
	
04.不同專案(C# Code)
	優點: 鬆耦合(各自獨立)；交換資料方法速度快；只需維護一種開發工具；減少重複程式碼
	缺點: 舊專案需要重新開發；調用各專案語法要寫的比較攏長；各元件版本獨立控管
	
----------

VS2022 C# 測試專案
	Console_Folder_namespace
	ClassLibrary1
	WinFormsTest
	WinFormsTest02